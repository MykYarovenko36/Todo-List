{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","todo","done","className","TodoListItem","props","label","onDeleted","onToggleImportant","onToggleDone","classNames","important","onClick","type","TodoList","todos","elements","map","item","id","itemProps","SearchPanel","state","term","onSearchChange","e","target","value","setState","placeholder","this","disabled","onChange","Component","ItemAddForm","onLableChange","onSubmit","preventDefault","onItemAdded","ItemStatusFilter","buttons","name","filter","onFilterChange","classListItem","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","toggleProperty","search","items","length","toLowerCase","indexOf","arr","propName","oldItem","doneCount","todoCount","visibleItems","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.016309f5.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({todo, done}) => {\r\n    return (\r\n    <div className='app-header'>\r\n        <h1>Todo List</h1>\r\n        <h2>{todo} more to do, {done} done</h2>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;","import TodoList from '../todo-list/todo-list';\r\nimport TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;","import React from 'react';\r\nimport './todo-list-item.css';\r\n\r\nconst TodoListItem = (props) => {\r\n    const { label, onDeleted,\r\n        onToggleImportant,\r\n        onToggleDone,\r\n        done, important } = props;\r\n    let classNames = 'list-item-label';\r\n    if (done) {\r\n        classNames += ' done';\r\n    }\r\n    if (important) {\r\n        classNames += ' important'\r\n    }\r\n    return (\r\n        <div className='todo-list-item'>\r\n            <span\r\n                className={classNames}\r\n                onClick={onToggleDone}\r\n            > {label} </span>\r\n            <div className='list-item-btn-group'>\r\n                <button type=\"button\" className=\"btn btn-danger list-item-btn\"\r\n                    onClick={onDeleted}>\r\n                    <i className='fa fa-trash-o' />\r\n                </button>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-success list-item-btn\"\r\n                    onClick={onToggleImportant}>\r\n                    <i className='fa fa-exclamation' />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default TodoListItem;","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ todos, onDeleted,\r\n                    onToggleImportant,\r\n                    onToggleDone }) => {\r\n  const elements = todos.map((item) => {\r\n    const { id, ...itemProps} = item;\r\n      return (\r\n          <li key={id} className='list-group-item'>\r\n              <TodoListItem\r\n                {...itemProps}\r\n                onDeleted = { () => {\r\n                  onDeleted(id);\r\n                }}\r\n                onToggleImportant = {() => {\r\n                  onToggleImportant(id);\r\n                }}\r\n                onToggleDone = {() => {\r\n                  onToggleDone(id);\r\n                }} \r\n              />\r\n          </li>\r\n      );\r\n  })\r\n  return (\r\n    <ul className='list-group todo-list'>\r\n      {elements}\r\n    </ul>\r\n  )\r\n};\r\n\r\nexport default TodoList;","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component{\r\n  state = {\r\n    term: '',\r\n  }\r\n  onSearchChange = (e) => {\r\n    const term = e.target.value;\r\n    this.setState({ term });\r\n    this.props.onSearchChange(term);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='search-panel'>\r\n      <input \r\n          placeholder='Type to search'\r\n          className = 'search-input form-control ' \r\n          value={this.state.term}\r\n          disabled = {false} \r\n          onChange={this.onSearchChange}/>\r\n      </div>\r\n    )\r\n  }\r\n};","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;","import React, {Component} from 'react';\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n    state = {\r\n        label: '',\r\n    }\r\n    onLableChange = (e) => {\r\n        this.setState({\r\n           label: e.target.value,\r\n        })\r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n        this.setState({\r\n            label: '',\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <form \r\n              className='item-add-form d-flex'\r\n              onSubmit={this.onSubmit}>\r\n                <input \r\n                  className='form-control' \r\n                  onChange={this.onLableChange} \r\n                  placeholder='what needs to be done'\r\n                  value={this.state.label}\r\n                />\r\n                <button \r\n                  className='btn btn-outline-info'\r\n                >\r\n                    Add item\r\n                    </button>\r\n            </form>\r\n        )\r\n    }\r\n}","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;","import React, { Component } from 'react';\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n    buttons = [\r\n        {\r\n            name: 'all',\r\n            label: 'All',\r\n        },\r\n        {\r\n            name: 'active',\r\n            label: 'Active',\r\n        },\r\n        {\r\n            name: 'done',\r\n            label: 'Done',\r\n        },\r\n    ];\r\n    render() {\r\n        const { filter, onFilterChange } = this.props;\r\n        const buttons = this.buttons.map((item) => {\r\n            const isActive = filter === item.name;\r\n            const classListItem = isActive? 'btn-outline-info active' : 'btn-outline-info';\r\n            return (\r\n                <button type='button'\r\n                    className={`btn ${classListItem}`}\r\n                    key={ item.name }\r\n                    onClick= {() => {\r\n                        onFilterChange(item.name)}}\r\n                    > {item.label} </button>\r\n            )\r\n        });\r\n        return (\r\n            <div className='btn-group'>\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n};","import App from './app';\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport AppHeader from '../app-header';\r\nimport TodoList from '../todo-list';\r\nimport SearchPanel from '../search-panel';\r\nimport ItemAddForm from '../item-add-form';\r\nimport './app.css';\r\nimport ItemStatusFilter from '../item-status-filter';\r\n\r\nexport default class App extends Component {\r\n  maxId = 100;\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem('Drink Cofee'),\r\n      this.createTodoItem('Make Awersome App'),\r\n      this.createTodoItem('Have a lunch'),\r\n      this.createTodoItem('Have a dinner')\r\n    ],\r\n    term: 'all',\r\n    filter: 'all', // active, all, done\r\n  }\r\n  createTodoItem(label) {\r\n    return {\r\n      label,\r\n      important: false,\r\n      done: false,\r\n      id: this.maxId++\r\n    }\r\n  }\r\n  deleteItem = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      const idx = todoData.findIndex((el) => el.id === id);\r\n      const newArray = [\r\n        ...todoData.slice(0, idx),\r\n        ...todoData.slice(idx + 1)\r\n      ];\r\n      return {\r\n        todoData: newArray,\r\n      }\r\n    })\r\n  }\r\n  addItem = (text) => {\r\n    const newItem = this.createTodoItem(text);\r\n    this.setState(({ todoData }) => {\r\n      const newArray = [...todoData, newItem];\r\n      return {\r\n        todoData: newArray,\r\n      }\r\n    })\r\n  }\r\n  onToggleImportant = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'important'),\r\n      };\r\n    });\r\n  }\r\n  onToggleDone = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'done'),\r\n      };\r\n    });\r\n  }\r\n  toggleProperty(arr, id, propName) {\r\n    const idx = arr.findIndex((el) => el.id === id);\r\n    const oldItem = arr[idx];\r\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\r\n      return [\r\n        ...arr.slice(0, idx), \r\n        newItem,\r\n        ...arr.slice(idx + 1)\r\n      ];\r\n  }\r\n  search = (items, term) => {\r\n    if (term.length === 0) {\r\n      return items;\r\n    }\r\n    return items.filter((item) =>\r\n        item.label\r\n        .toLowerCase()\r\n        .indexOf(term.toLowerCase() > -1));\r\n  }\r\n  onSearchChange = (term) => {\r\n    this.setState({ term });\r\n  }\r\n  filter = (items, filter) => {\r\n    switch(filter) {\r\n        case 'all':\r\n            return items;\r\n        case 'active':\r\n            return items.filter((item) => !item.done);\r\n        case 'done':\r\n            return items.filter((item) => item.done);\r\n        default:\r\n            return items;\r\n    }\r\n  }\r\n  onFilterChange = (filter) => {\r\n    this.setState({ filter });\r\n  }\r\n  render() {\r\n    const {todoData, term, filter} = this.state\r\n    const doneCount = todoData\r\n                        .filter((el) => el.done).length;\r\n    const todoCount = todoData\r\n                        .filter((el) => el.important).length;\r\n    const visibleItems = this.filter(this.search(todoData, term), filter);\r\n    return (\r\n      <div className='todo-app'>\r\n        <AppHeader todo={ todoCount } done={ doneCount } />\r\n        <div className='top-panel d-flex'>\r\n          <SearchPanel onSearchChange={this.onSearchChange}/>\r\n          <ItemStatusFilter \r\n            filter={ filter }\r\n            onFilterChange = {this.onFilterChange} />\r\n        </div>\r\n        <TodoList \r\n          todos={visibleItems}\r\n          onToggleImportant={this.onToggleImportant}\r\n          onToggleDone={this.onToggleDone}\r\n          onDeleted={(id) => {\r\n            this.deleteItem(id)\r\n          }} />\r\n        <ItemAddForm onItemAdded={this.addItem} />\r\n      </div>\r\n    )\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './components/app';\n\nReactDom.render(<App />, \n  document.getElementById('root')\n);"],"sourceRoot":""}